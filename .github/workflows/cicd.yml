name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  CI:
    env:
      CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Set Shas'
        uses: nrwl/nx-set-shas@v3
      - name: 'Download Node Dependencies'
        run: npm ci
      - name: 'Formatting check'
        run: npx nx format:check
      - name: 'Run linting on affected projects'
        run: npx nx affected -t lint --parallel=3
      - name: 'Run tests on affected projects'
        run: npx nx affected -t test --parallel=3
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build Docker images for affected projects'
        run: npx nx affected -t docker-build --parallel=3
  CD:
    needs: CI
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'staging' || startsWith(github.ref, 'refs/tags/release-') && 'production' || github.event_name == 'pull_request' && 'development' }}
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        service: ['acua', 'auth-service'] # Replace with your service names
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade --install ${{ matrix.service }} ./helm/${{ matrix.service }} --wait --atomic --namespace=acua-${{ env.ENVIRONMENT }} --values=./helm/${{ matrix.service }}/values-${{ env.ENVIRONMENT }}.yaml --dependency-update
          kubeconfig: '${{ secrets.KUBECONFIG }}'
          overrule_existing_kubeconfig: 'true'
