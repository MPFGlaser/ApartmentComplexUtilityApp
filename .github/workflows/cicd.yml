name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  CI:
    env:
      CONTAINER_REGISTRY: ${{ vars.CONTAINER_REGISTRY }}
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ vars.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Set Shas'
        uses: nrwl/nx-set-shas@v3
      - name: 'Download Node Dependencies'
        run: npm ci
      - name: 'Formatting check'
        run: npx nx format:check
      - name: 'Run linting on affected projects'
        run: npx nx affected -t lint --parallel=3
      - name: 'Run tests on affected projects'
        run: npx nx affected -t test --parallel=3
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Build Docker images for affected projects'
        run: npx nx affected -t docker-build --parallel=3
  CD:
    needs: CI
    runs-on: ubuntu-latest
    env:
      GCLOUD_PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
      GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}
      GKE_CLUSTER: acua # Add your cluster name here.
      GKE_ZONE: europe-west4 # Add your cluster zone here.
      DEPLOYMENT_NAME: acua # Add your deployment name here.
      IMAGE: static-site
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Set kubernetes secrets
      - name: Set secrets
        run: |-
          # Delete the secret if it already exists
          kubectl delete secret acua-backend-secrets -n acua || true
          kubectl delete secret location-db-credentials -n acua || true

          # Create the secret
          kubectl create secret generic acua-backend-secrets -n acua \
            --from-literal=firebase-config=${{ secrets.FIREBASE_CONFIG }}
          kubectl create secret generic location-db-credentials -n acua \
            --from-literal=database="locationdb" \
            --from-literal=username="locationdb" \
            --from-literal=password=${{ secrets.LOCATION_DB_PASSWORD }}

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          chmod +x ./kubernetes/apply.sh
          ./kubernetes/apply.sh
