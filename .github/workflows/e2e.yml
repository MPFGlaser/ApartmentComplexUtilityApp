name: e2e
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      VITE_API_URL: 'https://acua.mpfglaser.nl/api'
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ vars.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Download Node Dependencies'
        run: npm ci
      - name: 'Download Firebase CLI'
        run: npm install -g firebase-tools
      - name: 'Build pre-seeded database images'
        run: |
          docker build -t locationdb-e2e -f ./e2e/database-seeding/locationdb/Dockerfile ./e2e/database-seeding/locationdb
          docker build -t ticketdb-e2e -f ./e2e/database-seeding/ticketdb/Dockerfile ./e2e/database-seeding/ticketdb
      - name: 'Start Docker Compose'
        run: |
          docker-compose -f ./e2e/docker-compose.yml up -d
      - name: 'Start ACUA microservices stack'
        run: |
          nx run-many --target=serve --maxParallel=100 --exclude acua
      - name: 'Run Firebase Emulator and e2e tests on ACUA frontend'
        run: |
          firebase emulators:exec --import=./e2e/firebase-emulator-data --only firestore 'nx e2e acua-e2e'
